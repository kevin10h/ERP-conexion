name: CI / CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: kevin10h/erp-conexion  # nombre del repositorio de la imagen
    steps:
      # 0) Checkout
      - uses: actions/checkout@v4

      # 1) Python + dependencias para lint y tests
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install deps for test
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov ruff

      # 2) Linter
      - name: Lint with ruff
        run: ruff check .

      # 3) Tests + cobertura
      - name: Run pytest
        run: pytest -q --cov=app --cov-report=xml

      # 3 bis) Subir artefacto de cobertura
      - uses: actions/upload-artifact@v4
        with:
          name: cobertura
          path: coverage.xml          # cambia si usas otro formato

      # 4) Debug: asegurarse de que el PAT llega
      - name: Debug PAT length
        run: echo "GHCR_PAT length: ${#GHCR_PAT}"
        env:
          GHCR_PAT: ${{ secrets.GHCR_PAT }}

      # 5) Login en GHCR con tu PAT (write:packages)
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: kevin10h
          password: ${{ secrets.GHCR_PAT }}

      # 6) Build *y* Push en un paso
      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ghcr.io/${{ env.IMAGE_NAME }}:latest

      # 7) Resumen visual en la pestaÃ±a Actions
      - name: Publish summary
        run: |
          echo "### ðŸš€ Build completado" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Imagen: \`ghcr.io/${{ env.IMAGE_NAME }}:latest\`" >> $GITHUB_STEP_SUMMARY
